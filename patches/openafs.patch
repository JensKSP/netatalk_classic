diff --git a/src/afs/Makefile.in b/src/afs/Makefile.in
index b985b5433..cf5e23665 100644
--- a/src/afs/Makefile.in
+++ b/src/afs/Makefile.in
@@ -31,12 +31,6 @@ unified_afs.c: unified_afs.et
 afszcm.cat: afs_trace.msf
 	-$(RM) -f afszcm.cat
 	case ${SYS_NAME} in \
-		sgi_* ) \
-			${GENCAT} -m afszcm.cat afs_trace.msf ;; \
-		*_linux* | *_umlinux* ) \
-			${GENCAT} --new afszcm.cat afs_trace.msf ;; \
-		*_darwin_* ) \
-			${GENCAT} -new afszcm.cat afs_trace.msf ;; \
 		* ) \
 			${GENCAT} afszcm.cat afs_trace.msf ;; \
 	esac
diff --git a/src/afs/UKERNEL/sysincludes.h b/src/afs/UKERNEL/sysincludes.h
index 76409b1ce..bef713823 100644
--- a/src/afs/UKERNEL/sysincludes.h
+++ b/src/afs/UKERNEL/sysincludes.h
@@ -149,10 +149,10 @@ typedef unsigned int fsblkcnt_t;
 #endif
 #include <resolv.h>
 
-/* glibc 2.2 has pthread_attr_setstacksize */
-#if (defined(AFS_LINUX_ENV) && !defined(AFS_USR_LINUX_ENV)) || (defined(AFS_USR_LINUX_ENV) && (__GLIBC_MINOR__ < 2))
-#define pthread_attr_setstacksize(a,b) 0
-#endif
+///* glibc 2.2 has pthread_attr_setstacksize */
+//#if (defined(AFS_LINUX_ENV) && !defined(AFS_USR_LINUX_ENV)) || (defined(AFS_USR_LINUX_ENV) && (__GLIBC_MINOR__ < 2))
+//#define pthread_attr_setstacksize(a,b) 0
+//#endif
 
 #include  <sys/stat.h>		/* afs_usrops.h uses struct stat in prototypes */
 
@@ -968,6 +968,8 @@ struct usr_vattr {
 #define VWRITE			00200
 #define VEXEC			00100
 
+#include <linux/types.h>
+typedef __kernel_daddr_t	daddr_t;
 
 struct usr_vnode {
     unsigned short v_flag;
diff --git a/src/lwp/Makefile.in b/src/lwp/Makefile.in
index 6fe53960f..36b28e17d 100644
--- a/src/lwp/Makefile.in
+++ b/src/lwp/Makefile.in
@@ -62,111 +62,11 @@ process.default.s:
 # but will be removed after building the .o
 process.o	: process.default.s process.i386.s process.amd64.s process.c lwp.o
 	@set -x; case "$(SYS_NAME)" in \
-	sun4c_51 | sun4c_52 | sun4m_51 | sun4m_52 | sun4c_53 | sun4m_53  | sun4_53 | sun4_52 | sun4_54 | sun4c_54 | sun4m_54 | sun4x_5* | arm_linux* ) \
-		$(PATH_CPP) -P -I${TOP_INCDIR} ${srcdir}/process.default.s > process.s; \
-		${AS} process.s -o process.o; \
-			$(RM) process.s ;; \
-	sgi_5* ) \
-		cp ${srcdir}/process.default.s process.s ; \
-		$(CCOBJ) ${LWP_DBG} ${LWP_OPTMZ} -c -I${TOP_INCDIR} -KPIC -G0  process.s; \
-		$(RM) -f process.s ;;\
-	sgi_61 | sgi_62 | sgi_63 ) \
-		cp ${srcdir}/process.default.s process.s ; \
-		$(CCOBJ) ${LWP_DBG} ${LWP_OPTMZ} -c ${XCFLAGS} ${ARCHFLAGS} -I${TOP_INCDIR} -KPIC -G0  process.s; \
-		$(RM) -f process.s ;;\
-	*_darwin* ) \
-		$(RM) -f process.o ; \
-		CURRENTBUILDARCH="${ARCHFLAGS}"; \
-		if [ -z "$${CURRENTBUILDARCH}" ] ; then \
-		    CURRENTBUILDARCH=`$(CC) -dM -E -xc /dev/null | grep 'ppc\|i386\|x86_64\|arm'`; \
-		fi; \
-		ppc=`echo $${CURRENTBUILDARCH} | grep -q ppc && echo process.ppc.o` ; \
-		i386=`echo $${CURRENTBUILDARCH} | grep -q i386 && echo process.i386.o` ; \
-		amd64=`echo $${CURRENTBUILDARCH} | grep -q x86_64 && echo process.amd64.o` ; \
-		armv6=`echo $${CURRENTBUILDARCH} | grep -q armv6 && echo process.armv6.o` ; \
-		armv7=`echo $${CURRENTBUILDARCH} | grep -q armv7 && echo process.armv7.o` ; \
-		if [ -z "$${ppc}" -a -z "$${i386}" -a -z "$${amd64}" -a -z "$${armv6}" -a -z "$${armv7}" ] ; then \
-			if [ `arch` = ppc ] ; then \
-				ppc=yes ; \
-			else \
-				i386=yes ; \
-			fi ; \
-		fi ; \
-		if [ -n "$${armv6}" ] ; then \
-			$(CC) -x assembler-with-cpp -c -arch armv6 -I${TOP_INCDIR} -I${srcdir} ${srcdir}/process.default.s -o "$${armv6}" ; \
-			if [ -z "$${i386}" -a -z "$${amd64}" -a -z "$${ppc}" -a -z "$${armv7}" ] ; then \
-				${MV} "$${armv6}" process.o ; \
-			fi ; \
-		fi ; \
-		if [ -n "$${armv7}" ] ; then \
-			$(CC) -x assembler-with-cpp -c -arch armv7 -I${TOP_INCDIR} -I${srcdir} ${srcdir}/process.default.s -o "$${armv7}" ; \
-			if [ -z "$${i386}" -a -z "$${amd64}" -a -z "$${ppc}" -a -z "$${armv6}" ] ; then \
-				${MV} "$${armv7}" process.o ; \
-			fi ; \
-		fi ; \
-		if [ -n "$${ppc}" ] ; then \
-			$(CC) ${LWP_DBG} ${LWP_OPTMZ} -c -arch ppc -I${TOP_INCDIR} ${srcdir}/process.default.s -o "$${ppc}" ; \
-			if [ -z "$${i386}" -a -z "$${amd64}" -a -z "$${armv6}" -a -z "$${armv7}" ] ; then \
-				${MV} "$${ppc}" process.o ; \
-			fi ; \
-		fi ; \
-		if [ -n "$${i386}" ] ; then \
-			$(CC) -x assembler-with-cpp -c -arch i386 -I${TOP_INCDIR} -I${srcdir} ${srcdir}/process.i386.s -o "$${i386}" ; \
-			if [ -z "$${ppc}" -a -z "$${amd64}" -a -z "$${armv6}" -a -z "$${armv7}" ] ; then \
-				${MV} "$${i386}" process.o ; \
-			fi ; \
-		fi ; \
-		if [ -n "$${amd64}" ] ; then \
-			$(CC) -x assembler-with-cpp -c -arch x86_64 -I${TOP_INCDIR} -I${srcdir} ${srcdir}/process.amd64.s -o "$${amd64}" ; \
-			if [ -z "$${ppc}" -a -z "$${i386}" -a -z "$${armv6}" -a -z "$${armv7}" ] ; then \
-				${MV} "$${amd64}" process.o ; \
-			fi ; \
-		fi ; \
-		if [ ! -f process.o ] ; then \
-			lipo -create $${amd64} $${i386} $${ppc} $${armv6} $${armv7} -output process.o ;\
-		fi ;; \
-	i386_*bsd*) \
-		cp ${srcdir}/process.i386.s process.S ; \
-		${CCOBJ} -DIGNORE_STDS_H -E -I${srcdir} -I${TOP_INCDIR} process.S > process.s ; \
-		${AS} process.s -o process.o ;  \
-		$(RM) -f process.s process.S ;;\
-	amd64_fbsd_1??) \
-		$(AFS_CCRULE_NOQ) -c ${srcdir}/process.c;; \
-	amd64_*bsd*) \
+	*) \
 		cp ${srcdir}/process.amd64.s process.S ; \
 		${CCOBJ} -DIGNORE_STDS_H -E -I${srcdir} -I${TOP_INCDIR} process.S > process.s ; \
 		${AS} process.s -o process.o ;  \
 		$(RM) -f process.s process.S ;;\
-	ncrx86_* | sunx86_58 | sunx86_59 ) \
-		$(PATH_CPP) -P -D__sun -D__i386 -DIGNORE_STDS_H -I${TOP_INCDIR} -I${srcdir} ${srcdir}/process.i386.s > process.s; \
-		${AS} -o process.o process.s; \
-		$(RM) process.s ;; \
-	sunx86_510 | sunx86_511) \
-		if [ "${ASFLAGS}" = "-m64" ] ; then \
-			CURRENTBUILDARCH=amd64 ; \
-		else \
-			XCPPFLAGS="-D__i386" ; \
-			CURRENTBUILDARCH=i386 ; \
-		fi ; \
-		$(PATH_CPP) $${XCPPFLAGS} -P -D__sun -DIGNORE_STDS_H -I${TOP_INCDIR} -I${srcdir} ${srcdir}/process.$${CURRENTBUILDARCH}.s > process.s ; \
-		${AS} ${ASFLAGS} -o process.o process.s ; \
-		$(RM) process.s ;; \
-	alpha_nbsd* ) \
-		$(PATH_CPP) -DASSEMBLER -P -I${TOP_INCDIR} ${srcdir}/process.default.s > process.s; \
-		${AS} -o process.o process.s; \
-		$(RM) process.s ;; \
-	hp* | *_linux* | *_umlinux* | sgi_64 | sgi_65 ) \
-		$(AFS_CCRULE_NOQ) -c ${srcdir}/process.c;; \
-	ia64_hpux11* | hp_ux11* ) \
-		$(AFS_CCRULE_NOQ) -c ${srcdir}/process.c;; \
-	i386_*) \
-		$(PATH_CPP) -P -I${TOP_INCDIR} -I${srcdir} ${srcdir}/process.i386.s > process.s; \
-		${AS} process.s -o process.o; \
-		$(RM) process.s ;; \
-	*) \
-		$(PATH_CPP) -P -I${TOP_INCDIR} ${srcdir}/process.default.s > process.s; \
-		${AS} process.s -o process.o; \
-		$(RM) process.s ;; \
 	esac
 
 iomgr.o		: iomgr.c lwp.h timer.h
